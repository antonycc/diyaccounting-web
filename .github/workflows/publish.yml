name: Build and Publish Docker Image to GitHub Packages
on:
  #push:
  #  branches:
  #    - main
  #release:
  #  types: [created]
    workflow_dispatch:
jobs:
  publish:
    runs-on: ubuntu-latest 
    permissions: 
      contents: read
      packages: write 
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # See: https://github.com/marketplace/actions/maven-settings-action
      - run: rm -f ~/.m2/settings.xml ;
      - name: Generate Maven settings for GitHub Packages
        uses: s4u/maven-settings-action@v2.8.0
        with:
          # ${GITHUB_ACTOR}
          servers: '[{"id": "github", "username": "not-used", "password": "${ANTONYCC_REPOSITORY_GITHUB_PAT}"}]'
          githubServer: false

      #- run: echo "~/.m2/settings.xml:" ; cat ~/.m2/settings.xml ;
      #- run: echo "ANTONYCC_REPOSITORY_GITHUB_PAT=${ANTONYCC_REPOSITORY_GITHUB_PAT?}"
      #  env:
      #    ANTONYCC_REPOSITORY_GITHUB_PAT: ${{ secrets.ANTONYCC_REPOSITORY_GITHUB_PAT }}
      # --settings ~/.m2/settings.xml

      - name: Publish package
        run: mvn --batch-mode -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/antonycc/mdcms-lib deploy spring-boot:build-image ;
        env:
          # Referenced in the settings.xml file which we generated above.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTONYCC_REPOSITORY_GITHUB_PAT: ${{ secrets.ANTONYCC_REPOSITORY_GITHUB_PAT }}

      #- name: Log in to the Container registry
      #  uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #  with:
      #    registry: ${{ env.REGISTRY }}
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #  with:
      #    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: push
        uses: docker/build-push-action@v3
        with:
          context: .
          #file: ./Dockerfile
          push: true
          #tags: ${{ secrets.DOCKER_HUB_USERNAME }}/clockbox:latest
          #tags: ${{ secrets.DOCKER_HUB_USERNAME }}/diy-accounting-zips:latest
          #tags: diy-accounting-zips:latest
          #labels: latest
          #tags: ${{ steps.meta.outputs.tags }}
          tags: diyaccounting-web:0.1-SNAPSHOT
          #labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            WAR_FILE=diyaccounting-web-0.1-SNAPSHOT.war
