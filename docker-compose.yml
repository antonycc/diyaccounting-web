# Run the build docker image using file system resources
# Usage:
# $ source ./github-antonycc-keys.sh
# $ ./mvnw --settings settings.xml clean install
# $ docker build --tag diyaccounting-web:latest .
# $ docker compose build --no-cache --pull
# $ docker compose up --force-recreate --detach
# $ docker compose logs --tail="all" --follow
# $ docker compose down --remove-orphans
# Browse: curl --head http://localhost:8081/home.html
version: '3.8'
services:

  # Built with
  # $ source ./github-antonycc-keys.sh
  # $ ./mvnw --settings settings.xml clean install spring-boot:build-image
  # $ docker build --tag diyaccounting-web:latest .
  web:
    image: diyaccounting-web:latest
    ports:
      - 8080:8080
    volumes:
      # Content items and assets to be loaded from the filesystem referenced by catalogue.properties.
      # e.g. catalogue.productContentBasePath=urn:diyaccounting.co.uk:file:///var/data/content/
      - ./src/main/resources/test-content:/var/data/content:ro
      # Catalogue files to be loaded from the filesystem referenced by catalogue.properties.
      # e.g. catalogue.catalogueResource=urn:diyaccounting.co.uk:file:///var/data/catalogue/catalogue.txt
      - ./src/main/resources/test-catalogue:/var/data/catalogue:ro
      # Stock files to be loaded from the filesystem referenced by catalogue.properties.
      # e.g. catalogue.stockUrn=urn:diyaccounting.co.uk:file:///var/data/stock
      - ./test-stock:/var/data/stock:ro
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - admin
      - public
  http:
    depends_on:
      - web
    links:
      - web
    build:
      context: docker/http
    ports:
      - 8081:80
    volumes:
      # Serve a home directory by mounting a doc root for nginx referenced by nginx.conf
      - ./src/main/webapp:/usr/share/webapp:ro
      # Serve the content assets by mounting a doc root for nginx referenced by nginx.conf
      - ./src/main/resources/content/assets:/usr/share/content/assets:ro
    networks:
      - app
      - public
networks:
  admin:
    driver: bridge
  app:
    driver: bridge
  public:
    driver: bridge
